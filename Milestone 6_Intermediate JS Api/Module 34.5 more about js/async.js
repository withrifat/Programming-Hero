console.log('one');
console.log('two');

// setTimeout(callThree, 5000)
setTimeout(() =>{
    console.log('new three inside set time out')
}, 4000)

// fetch('https://jsonplaceholder.typicode.com/users')
//     .then(res => res.json())
//     .then(data => console.log(data))

console.log('four');
console.log('five');

function callThree() {
    console.log('three');
}



// =======================
// üìå Async & Await Notes
// =======================
//
// 1. async ‡¶¶‡¶ø‡ßü‡ßá function ‡¶¨‡¶æ‡¶®‡¶æ‡¶≤‡ßá ‡¶∏‡ßá‡¶ü‡¶æ ‡¶∏‡¶¨‡¶∏‡¶Æ‡ßü Promise return ‡¶ï‡¶∞‡ßá
// 2. await ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶≤‡ßá Promise ‡¶∂‡ßá‡¶∑ ‡¶®‡¶æ ‡¶π‡¶ì‡ßü‡¶æ ‡¶™‡¶∞‡ßç‡¶Ø‡¶®‡ßç‡¶§ ‡¶Ö‡¶™‡ßá‡¶ï‡ßç‡¶∑‡¶æ ‡¶ï‡¶∞‡ßá
// 3. try...catch ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßá error ‡¶ß‡¶∞‡¶æ ‡¶Ø‡¶æ‡ßü
//
// Async/Await = ‡¶ï‡ßã‡¶°‡¶ï‡ßá ‡¶∏‡¶π‡¶ú ‡¶ì ‡¶™‡ßú‡¶§‡ßá ‡¶∏‡ßÅ‡¶¨‡¶ø‡¶ß‡¶æ‡¶ú‡¶®‡¶ï ‡¶ï‡¶∞‡ßá

// Example 1: Simple async function
async function sayHello() {
  return "Hello World!";
}
sayHello().then(msg => console.log(msg));

// Example 2: Using await
function getData() {
  return new Promise(resolve => {
    setTimeout(() => resolve("‚úÖ Data ‡¶™‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶ó‡ßá‡¶≤‡ßã"), 2000);
  });
}

async function showData() {
  console.log("‚è≥ Data ‡¶≤‡ßã‡¶° ‡¶π‡¶ö‡ßç‡¶õ‡ßá...");
  let result = await getData(); // ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶Ö‡¶™‡ßá‡¶ï‡ßç‡¶∑‡¶æ ‡¶ï‡¶∞‡¶¨‡ßá
  console.log(result);
  console.log("üéâ Done!");
}
showData();

// Example 3: Error Handling with try...catch
async function loadData() {
  try {
    let res = await fetch("https://wrong-url.com");
    let data = await res.json();
    console.log(data);
  } catch (err) {
    console.log("‚ùå Error:", err.message);
  }
}
loadData();
